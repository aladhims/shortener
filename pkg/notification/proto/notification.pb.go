// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/notification.proto

package notification

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}

var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}

func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beb4fc010f5c4b1c, []int{3, 0}
}

type NotifyRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Fullname             string   `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Slug                 string   `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Origin               string   `protobuf:"bytes,4,opt,name=origin,proto3" json:"origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyRequest) Reset()         { *m = NotifyRequest{} }
func (m *NotifyRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyRequest) ProtoMessage()    {}
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beb4fc010f5c4b1c, []int{0}
}

func (m *NotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyRequest.Unmarshal(m, b)
}
func (m *NotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyRequest.Marshal(b, m, deterministic)
}
func (m *NotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyRequest.Merge(m, src)
}
func (m *NotifyRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyRequest.Size(m)
}
func (m *NotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyRequest proto.InternalMessageInfo

func (m *NotifyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NotifyRequest) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

func (m *NotifyRequest) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *NotifyRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type NotifyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyResponse) Reset()         { *m = NotifyResponse{} }
func (m *NotifyResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyResponse) ProtoMessage()    {}
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beb4fc010f5c4b1c, []int{1}
}

func (m *NotifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyResponse.Unmarshal(m, b)
}
func (m *NotifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyResponse.Marshal(b, m, deterministic)
}
func (m *NotifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyResponse.Merge(m, src)
}
func (m *NotifyResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyResponse.Size(m)
}
func (m *NotifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyResponse proto.InternalMessageInfo

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beb4fc010f5c4b1c, []int{2}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=notification.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beb4fc010f5c4b1c, []int{3}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func init() {
	proto.RegisterEnum("notification.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
	proto.RegisterType((*NotifyRequest)(nil), "notification.NotifyRequest")
	proto.RegisterType((*NotifyResponse)(nil), "notification.NotifyResponse")
	proto.RegisterType((*HealthCheckRequest)(nil), "notification.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "notification.HealthCheckResponse")
}

func init() { proto.RegisterFile("proto/notification.proto", fileDescriptor_beb4fc010f5c4b1c) }

var fileDescriptor_beb4fc010f5c4b1c = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xed, 0xdc, 0x5a, 0xbd, 0x73, 0xb3, 0x5c, 0x45, 0xc2, 0xf4, 0x61, 0xf6, 0xc9, 0xa7,
	0x0e, 0xe6, 0x9b, 0xaf, 0x43, 0xa6, 0x28, 0x19, 0xb4, 0xfe, 0x79, 0x94, 0x5a, 0xb2, 0x2e, 0xd8,
	0x26, 0xb3, 0x49, 0x05, 0xbf, 0x8a, 0xf8, 0x61, 0xa5, 0x69, 0x2b, 0x16, 0x86, 0x7b, 0xcb, 0xef,
	0x5c, 0xce, 0xcd, 0x39, 0x21, 0x40, 0xd6, 0xb9, 0xd4, 0x72, 0x22, 0xa4, 0xe6, 0x4b, 0x1e, 0x47,
	0x9a, 0x4b, 0xe1, 0x1b, 0x09, 0x0f, 0xfe, 0x6a, 0x5e, 0x06, 0x03, 0x5a, 0xf2, 0x67, 0xc0, 0xde,
	0x0b, 0xa6, 0x34, 0x1e, 0x43, 0x8f, 0x65, 0x11, 0x4f, 0x89, 0x35, 0xb6, 0x2e, 0xf6, 0x83, 0x0a,
	0x70, 0x04, 0x7b, 0xcb, 0x22, 0x4d, 0x45, 0x94, 0x31, 0xd2, 0x31, 0x83, 0x5f, 0x46, 0x84, 0xae,
	0x4a, 0x8b, 0x84, 0xec, 0x1a, 0xdd, 0x9c, 0xf1, 0x04, 0x6c, 0x99, 0xf3, 0x84, 0x0b, 0xd2, 0x35,
	0x6a, 0x4d, 0x9e, 0x0b, 0xc3, 0xe6, 0x3a, 0xb5, 0x96, 0x42, 0x31, 0xcf, 0x07, 0xbc, 0x61, 0x51,
	0xaa, 0x57, 0xb3, 0x15, 0x8b, 0xdf, 0x9a, 0x14, 0x04, 0x1c, 0xc5, 0xf2, 0x0f, 0x1e, 0xb3, 0x3a,
	0x47, 0x83, 0xde, 0x97, 0x05, 0x47, 0x2d, 0x43, 0xb5, 0x07, 0xe7, 0x60, 0x2b, 0x1d, 0xe9, 0x42,
	0x19, 0xc3, 0x70, 0x3a, 0xf1, 0x5b, 0xdd, 0x37, 0x58, 0xfc, 0xb0, 0x5c, 0x29, 0x92, 0xd0, 0xd8,
	0x82, 0xda, 0xee, 0x5d, 0xc1, 0xa0, 0x35, 0xc0, 0x3e, 0x38, 0x8f, 0xf4, 0x8e, 0x2e, 0x9e, 0xa9,
	0xbb, 0x53, 0x42, 0x78, 0x1d, 0x3c, 0xdd, 0xd2, 0xb9, 0x6b, 0xe1, 0x21, 0xf4, 0xe9, 0xe2, 0xe1,
	0xa5, 0x11, 0x3a, 0xd3, 0x6f, 0x0b, 0x9c, 0xb0, 0x0a, 0x8a, 0x33, 0xb0, 0xab, 0xaa, 0x78, 0xda,
	0x8e, 0xd2, 0x7a, 0xef, 0xd1, 0xd9, 0xe6, 0x61, 0xdd, 0xea, 0x1e, 0x7a, 0x26, 0x33, 0x8e, 0xff,
	0xa9, 0x53, 0x2d, 0x3a, 0xdf, 0x5a, 0xf8, 0xd5, 0x36, 0x3f, 0xe0, 0xf2, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x7d, 0x4e, 0x55, 0x5f, 0x1d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error)
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error) {
	out := new(NotifyResponse)
	err := c.cc.Invoke(ctx, "/notification.Service/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/notification.Service/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Notify(context.Context, *NotifyRequest) (*NotifyResponse, error)
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.Service/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Notify(ctx, req.(*NotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.Service/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notification.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Notify",
			Handler:    _Service_Notify_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _Service_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/notification.proto",
}
